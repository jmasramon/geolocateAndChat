// # TODO: Testejar que, ...
// # hi hagi els elements necessaris al DOM
// # cridi a submit quan es prem el botó
// # el submit ..
// #   faci el submit event
// #   amagui el welcome screen
// #   llenci mostrarEsperando
// #   que cridi a controlarMovimiento
// # controlarMovimientos ...
// #   crida a vigila cada segon  
// #   vigila ...
// #     fa bé doGeolocation
// #     recupera valors correctes
// #     llenci positionChange
// #   
// Generated by CoffeeScript 1.6.2


describe("The welcomeView", function(){
  // $(document).data("initialWizard", $("#yourWizard").clone(true));
  // var secWelcome = $("section.welcome").clone();
  // var secEsperando = $("section.esperando").clone();
  beforeEach(function() {
    this.form = window.app.welcomeView.$el.find('.form-horizontal');
    spyOn(console, 'error').andCallThrough();
 });

  afterEach(function(){
  });
  
  it("should have el pointing to section welcome", function() {
    expect(window.app.welcomeView.el.nodeName).toEqual('SECTION');
    expect($(window.app.welcomeView.el)).toHaveClass('welcome');
  });

  it("should have the elements with the correct values", function() {
    var nom = this.form.find('#nickName');
    var email = this.form.find('#email');
    nom[0].value = 'jmsol';
    email[0].value = 'jordi.masramon@gmail.com';

    expect(nom[0].value).toEqual('jmsol');
    expect(email[0].value).toEqual('jordi.masramon@gmail.com');
    expect(this.form.find('#lat')[0].value).toEqual('41.395039');
    expect(this.form.find('#lng')[0].value).toEqual('2.148918');
  });

  it("should have submit called, hide welcomeScreen, show waitingScreen and call controlarMovimiento when button pressed", function() {
    spyOn(window.app.welcomeView, 'submit'); // aquest no funciona !!!
    // you add your spy after backbone has already bound the click event directly to the addTask function (it does that during construction of the View). Therefore your spy will not get called
    spyOn(window.app.welcomeView, 'controlarMovimiento');
    spyOn(window.app.connection, 'connect');
 
    expect(window.app.welcomeView.$el).not.toBeHidden();
    expect(window.app.esperandoView.$el).toHaveClass('template');

    this.form.submit();

    expect(window.app.welcomeView.submit).not.toHaveBeenCalled(); // Ho es però no ho espia bé.
    expect(window.app.welcomeView.controlarMovimiento).toHaveBeenCalled();
    expect(window.app.connection.connect).toHaveBeenCalled();

    expect(window.app.welcomeView.$el).toBeHidden();
    expect(window.app.esperandoView.$el).not.toHaveClass('template');
    expect(window.app.esperandoView.$el).not.toBeHidden();
    // $("section.welcome").replaceWith(this.divClone);
  });

  it("should control the movement of the user but do nothing if it does not change", function() {
    if (navigator.userAgent.indexOf("MSIE") == -1){
      console.log('No IE. Testing');
      spyOn(window.app.connection, 'connect'); // To prevent calls to the server
      spyOn(window.app.welcomeView, 'controlarMovimiento').andCallThrough();
      spyOn(window, 'doGeolocation');
      spyOn(window.app.connection, 'positionChange');

      jasmine.Clock.useMock();
      this.form.submit();

      expect(window.app.connection.connect).toHaveBeenCalled();
      expect(window.app.welcomeView.controlarMovimiento).toHaveBeenCalled();
      expect(window.app.connection.positionChange).not.toHaveBeenCalled();
      expect(window.doGeolocation).not.toHaveBeenCalled();

      jasmine.Clock.tick(1001);

      expect(window.doGeolocation).toHaveBeenCalled();
      expect(window.app.connection.positionChange).not.toHaveBeenCalled();
    }
  });

  it("should control the movement of the user and send update to server if it has moved", function(){
    // console.log('User agent = ' + navigator.userAgent);
    if (navigator.userAgent.indexOf("MSIE") == -1){
      console.log('No IE. Testing this funcitionality');
      spyOn(window.app.connection, 'connect'); // To prevent calls to the server
      spyOn(window.app.welcomeView, 'controlarMovimiento').andCallThrough();
      spyOn(window, 'doGeolocation');
      spyOn(window.app.connection, 'positionChange');

      jasmine.Clock.useMock();
      this.form.submit();

      expect(window.app.connection.connect).toHaveBeenCalled();
      expect(window.app.welcomeView.controlarMovimiento).toHaveBeenCalled();
      expect(window.app.connection.positionChange).not.toHaveBeenCalled();
      expect(window.doGeolocation).not.toHaveBeenCalled();

      window.positionChanged = true;
      jasmine.Clock.tick(1001);

      expect(window.doGeolocation).toHaveBeenCalled();
      expect(window.app.connection.positionChange).toHaveBeenCalled();
      expect(window.app.connection.positionChange).toHaveBeenCalledWith('jmsol','41.395039','2.148918');
      expect(window.positionChanged).toBe(false);

      // $("section.welcome").replaceWith(secWelcome);
      // $("section.esperando").replaceWith(secEsperando);
    }
  });

  it("should not have triggered any error", function  () {
      expect(console.error).not.toHaveBeenCalled();
  });

  it ("should be left as original", function(){
      $("section.welcome").removeClass('template');
      $("section.welcome").show();
      $("section.esperando").addClass('template');
  });
  // $(document).data("initialWizard").replaceAll("#yourWizard");
});

